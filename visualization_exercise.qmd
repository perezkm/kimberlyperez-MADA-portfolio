---
title: "Visualization Exercise"
output:
  html_document:
    toc: FALSE
---

# The Data

The graph I attempted to reproduce below was retrieved from a FiveThirtyEight article ["The National Parks Have Never Been More Popular"](https://fivethirtyeight.com/features/the-national-parks-have-never-been-more-popular/), by Andrew Flowers, that visualizes the rise in popularity of the US's national parks throughout the years. The graph was created from annual visitor counts that date back to 1904. Based on these visitor counts, Flowers then ranked the national parks (e.g., park with most visitor count ranked highest). The National Park Services (NPS) have several detailed data sets that can be found [here](https://irma.nps.gov/STATS/Reports/National). The data set I utilized for this visualization exercise can be found on the aforementioned NPS page under the "Annual Visitation and Record Year by Park (1904-Last Calendar Year)". You will be prompted to a page with three drop down menus. For"Region(s)" check "(Select All)". Next, for "Park(s)" check "(Select All)". Finally, for "Park Type", scroll and check "National Park". This will then return the data needed to replicate the graph below.

![](national-parks-map.png)

# Loading R Libraries

```{r}
library(readr)
library(tidyverse)
library(fivethirtyeight)
library(ggthemes)
library(dplyr)
library(janitor)
library(tibble)
```

# Data Loading, Exploring, and Cleaning

```{r}
orig_nps<-read_csv("data/NPS Visitation Data.csv")

str(orig_nps) #Exploring the NPS data a bit with these commands
summary(orig_nps)
class(orig_nps)
names(orig_nps) #Exploring columns names, they look to be all numbers

nps1<-orig_nps[-c(1,3,6, 118:122)] #Here I will remove the columns that I do not need by selecting the column number
nps2<-nps1[-c(1,2,65),] #I am going to clean the data a bit more by removing the two rows at the top of the dataset
print(nps2) #Much more succinct
```

While our dataset is cleaner and more succinct, there are no column or row names

```{r}
nps3<- nps2 %>% #Using first row of dataset for column names 
    row_to_names(row_number=1)

nps4<- nps3[!is.na(nps3$`Park Name`),] #Removing NA from Park Name column

nps5<- nps4 %>% #Converting dataset from wide to long 
  pivot_longer(
    cols = c(-`Park Name`), 
    names_to = "year", 
    values_to = "visitors",
    values_drop_na = TRUE)

nps_clean<- nps5 %>% #Ranking the parks 
    group_by(year) %>%
    mutate(Rank = order(order(visitors, decreasing=TRUE))) %>%
    ungroup() %>%
  rename(park_name = `Park Name`)
```

# Beginning Data Visualization
```{r}
library(ggthemes)

nps_clean$year<-as.numeric(as.character(nps_clean$year)) #Making year numeric

#Creating df for each of the top parks to overlay on nps_g1
GSM<- nps_clean [which (nps_clean$park_name=="Great Smoky Mountains NP"),]  

GC<- nps_clean [which (nps_clean$park_name=="Grand Canyon NP"),] 

RMNP<- nps_clean [which (nps_clean$park_name=="Rocky Mountain NP"),] 

YNP<- nps_clean [which (nps_clean$park_name=="Yosemite NP"),]

YSNP<- nps_clean [which (nps_clean$park_name=="Yellowstone NP"),] 

ZNP<- nps_clean [which (nps_clean$park_name=="Zion NP"),] 

ANP<- nps_clean [which (nps_clean$park_name=="Acadia NP"),] 
	
HSNP<- nps_clean [which (nps_clean$park_name=="Hot Springs NP"),]

DNP<- nps_clean [which (nps_clean$park_name=="Denali NP & PRES"),]

CCNP<- nps_clean [which (nps_clean$park_name=="Carlsbad Caverns NP"),]

GBNP<- nps_clean [which (nps_clean$park_name=="Great Basin NP"),]


nps_g1<- nps_clean %>% ggplot() +geom_line( 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="grey") +
  theme_fivethirtyeight() +
  theme(legend.position = "none") + 
  scale_y_reverse(breaks=seq(50,1,-25), limits=c(62,-1)) + #setting y axis
  scale_x_continuous(breaks=seq(1925,2000,25),limits=c(1904,2030)) + #setting y axis 
  xlab("Year") + 
  ylab("Rank") +
  labs(title= "The most popular national parks",
       subtitle= "National parks ranked by number of visitors in a given year") + 
  geom_line(data=GSM, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="darkolivegreen") +
    annotate("text", x = 2007, y =0, label = "Great Smoky Mountains", color = "darkolivegreen", fontface=2, size=2) +
  geom_line(data=GC, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="deepskyblue4") +
    annotate("text", x = 2022, y =1.6, label = "Grand Canyon", color = "deepskyblue4", fontface=2, size=2) + 
  geom_line(data=RMNP, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="cyan4")+
    annotate("text", x = 2022, y =2.6, label = "Rocky Mountain", color = "cyan4", fontface=2, size= 2) +
  geom_line(data=YNP, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="chartreuse4") +
  annotate("text", x = 2021, y =3.6, label = "Yosemite", color = "chartreuse4", fontface=2, size= 2) +
  geom_line(data=YSNP, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="orange2") +
  annotate("text", x = 2021, y =4.7, label = "Yellowstone", color = "orange2", fontface=2, size= 2) +
  geom_line(data=ZNP, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="tomato") +
  annotate("text", x = 2018.3, y =5.8, label = "Zion", color = "tomato", fontface=2, size= 2) +
  geom_line(data=ANP, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="gold1") +
  annotate("text", x = 2018.9, y =8.2, label = "Acadia", color = "gold1", fontface=2, size= 2) +
  geom_line(data=HSNP, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="plum3") +
  annotate("text", x = 2020.8, y =16.8, label = "Hot Springs", color = "plum3", fontface=2, size= 2) +
  geom_line(data=DNP, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="mediumpurple1") +
   annotate("text", x = 2019, y =34.7, label = "Denali", color = "mediumpurple", fontface=2, size= 2) +
  geom_line(data=CCNP, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="lightskyblue2") +
   annotate("text", x = 2023.3, y =42, label = "Carlsbad Caverns", color = "lightskyblue2", fontface=2, size= 2) +
  geom_line(data=GBNP, 
  aes(x = year, y = Rank, color = park_name, group = park_name), color="maroon2") + 
   annotate("text", x = 2020.8, y =52, label = "Great Basin", color = "maroon2", fontface=2, size= 2)
  

nps_g1
```

Here is an update on my data visualization! 3/10/2023
I think I bit off a bit more than I could chew with this graph. But, I am pretty proud of how far I got with it. To make things a little more cohesive, I overrode the color to grey. I plan on continuing work on it tonight with the hopes of adding the 11 parks in color. It is definitely a work in progress!